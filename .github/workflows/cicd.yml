---
name: CI/CD

'on':
  push:
    branches:
      - 'feature/**'
    tags-ignore:
      - '**'

jobs:

  linter:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: true
          FILTER_REGEX_EXCLUDE: '.*.md'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JSCPD: false

  sandbox:
    name: Sandbox Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install pip Dependencies
        run: pip3 install -r requirements.txt

      - name: Install ansible galaxy Dependencies
        run: ansible-galaxy install -r requirements.yml
      
      - name: Run ansible playbook
        run: ansible-playbook --connection=local --inventory 127.0.0.1, playbook.yml
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1

      - name: Run Tests
        run: echo "TODO!!!!!!!!!!!!!"
  
  mergeDevelop:
    name: Merge to develop
    runs-on: ubuntu-latest
    needs:
      - linter
      - sandbox
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          branch: develop
          delete-branch: true

  deployTest:
    name: Deploy Test Stage
    runs-on: [self-hosted, Linux, X64, test]
    needs:
      - mergeDevelop
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          rm -rf .env
          pip3 install virtualenv
          python3 -m virtualenv .env --system-site-packages
          source .env/bin/activate
          pip install -r requirements.txt
          ansible-galaxy install -r requirements.yml
          python -V
          pip -V
          ansible --version
          ansible-playbook -i hosts.ini playbook.yml
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1

      - name: Validate
        run: |
          source .env/bin/activate
          ansible-playbook -i hosts.ini tests/dhcp.yml
          echo "TODO - RUN TESTS!!!!!!!!!!!!!"
        env:
          PY_COLORS: 1
          ANSIBLE_FORCE_COLOR: 1

      - name: "Notify Slack channel #test on success"
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST }}
          SLACK_ICON: https://github.com/ckaserer/logos/raw/master/ansible.png
          SLACK_USERNAME: ${{ github.repository }}
          SLACK_COLOR: '#28a745'
          SLACK_FOOTER: ''

      - name: "Notify Slack channel #test on failure"
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_TEST }}
          SLACK_ICON: https://github.com/ckaserer/logos/raw/master/ansible.png
          SLACK_USERNAME: ${{ github.repository }}
          SLACK_COLOR: '#ff0033'
          SLACK_FOOTER: ''

  mergeMain:
    name: Merge to main
    runs-on: ubuntu-latest
    needs:
      - deployTest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          branch: main

  notifyFail:
    name: "Notify Slack Channel #fail"
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs:
      - sandbox
      - linter
      - mergeDevelop
      - deployTest
      - mergeMain
    steps:
      - name: "Notify Slack channel #fail"
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_FAIL }}
          SLACK_ICON: https://github.com/ckaserer/logos/raw/master/ansible.png
          SLACK_USERNAME: ${{ github.repository }}
          SLACK_COLOR: '#ff0033'
          SLACK_FOOTER: ''

...
